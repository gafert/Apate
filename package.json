{
  "name": "riscv-sim",
  "version": "0.0.1",
  "description": "CPU Visualisation based on a risc-v processor in verilog",
  "author": {
    "name": "Michael Gafert",
    "email": "m.gafert@outlook.com"
  },
  "keywords": [
    "angular",
    "angular 9",
    "electron",
    "typescript",
    "eslint",
    "spectron",
    "sass"
  ],
  "main": "main.js",
  "private": true,
  "scripts": {
    "info": "npm-scripts-info",

    "?start": "echo Start electron locally with angular beeing served and watched",
    "start": "npm-run-all -p electron:serve ng:serve",
    "ng:serve": "ng serve",
    "ng:serve:web": "ng serve -c web -o",
    "electron:serve-tsc": "tsc -p tsconfig-serve.json",
    "electron:serve": "wait-on http-get://localhost:4200/ && npm run electron:serve-tsc && electron . --serve --remote-debugging-port=9222",

    "?build:simlib_binding:local": "echo Generates ts, cpp bindings between electron and the simulation_library. Requires cmake and python3.",
    "build:simlib_binding:local": "cd ./simulation_library && cmake . -G\"Unix Makefiles\" && make GenerateBinding && cd ..",

    "?build:simlib:local": "echo Compile the simlib simulation_library. Requires cmake and gcc to be installed.",
    "build:simlib:local": "npm run build:simlib:clean && cmake -S./simulation_library -G\"Unix Makefiles\" -B./simulation_library && make -C ./simulation_library Vtestbench",

    "?build:simlib:windows_docker": "echo Compile the simlib simulation_library for windows with a docker image. Requires docker.",
    "build:simlib:windows_docker": "npm run build:simlib:clean && docker run --rm dockcross/windows-static-x64 > ./dockcross-windows-static-x64 && chmod +x ./dockcross-windows-static-x64 && ./dockcross-windows-static-x64 cmake -S./simulation_library -G\"Unix Makefiles\" -B./simulation_library && ./dockcross-windows-static-x64 make -C ./simulation_library Vtestbench",

    "?build:simlib:linux_docker": "echo Compile the simlib simulation_library for linux with a docker image. Requires docker.",
    "build:simlib:linux_docker": "npm run build:simlib:clean && docker run --rm dockcross/linux-x64 > ./dockcross-linux-x64 && chmod +x ./dockcross-linux-x64 && ./dockcross-linux-x64 cmake -S./simulation_library -G\"Unix Makefiles\" -B./simulation_library && ./dockcross-linux-x64 make -C ./simulation_library Vtestbench ",

    "?build:simlib:clean": "echo Clean the CMakeFiles of the simulation_library.",
    "build:simlib:clean": "rm -rf ./simulation_library/CMakeFiles ||: && rm ./simulation_library/Makefile ||: && rm ./simulation_library/CMakeCache.txt ||: && rm ./simulation_library/cmake_install.cmake ||:",

    "?electron:all": "Build windows, macOS and linux production builds.",
    "electron:all": "npm run build:prod && electron-builder build -lwm",
    "electron:win_lin": "npm run build:prod && electron-builder build --win --linux",
    "electron:linux": "npm run build:prod && electron-builder build --linux",
    "electron:windows": "npm run build:prod && electron-builder build --win",
    "electron:mac": "npm run build:prod && electron-builder build --mac",

    "build": "npm run electron:serve-tsc && ng build --base-href ./",
    "build:dev": "npm run build -- -c dev",
    "build:prod": "npm run build -- -c production",

    "postinstall": "electron-builder install-app-deps",
    "ng": "ng",
    "test": "ng test",
    "e2e": "npm run build:prod && cross-env TS_NODE_PROJECT='e2e/tsconfig.e2e.json' mocha --timeout 300000 --require ts-node/register e2e/**/*.e2e.ts",
    "lint": "ng lint"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "8.4.1",
    "@angular-devkit/build-angular": "0.900.3",
    "@angular-eslint/builder": "0.0.1-alpha.18",
    "@angular/cli": "9.0.3",
    "@angular/common": "9.0.2",
    "@angular/compiler": "9.0.2",
    "@angular/compiler-cli": "9.0.2",
    "@angular/core": "9.0.2",
    "@angular/forms": "9.0.2",
    "@angular/language-service": "9.0.2",
    "@angular/platform-browser": "9.0.2",
    "@angular/platform-browser-dynamic": "9.0.2",
    "@angular/router": "9.0.2",
    "@ngx-translate/core": "12.1.1",
    "@ngx-translate/http-loader": "4.0.0",
    "@types/jasmine": "3.5.6",
    "@types/jasminewd2": "2.0.8",
    "@types/mocha": "7.0.1",
    "@types/node": "12.11.1",
    "@typescript-eslint/eslint-plugin": "2.20.0",
    "@typescript-eslint/parser": "2.20.0",
    "chai": "4.2.0",
    "codelyzer": "5.1.2",
    "conventional-changelog-cli": "2.0.32",
    "core-js": "3.1.4",
    "cross-env": "7.0.0",
    "electron": "8.0.1",
    "electron-builder": "22.3.2",
    "electron-rebuild": "1.10.1",
    "electron-reload": "1.5.0",
    "eslint": "6.8.0",
    "eslint-plugin-import": "2.20.1",
    "jasmine-core": "3.5.0",
    "jasmine-spec-reporter": "4.2.1",
    "karma": "4.4.1",
    "karma-coverage-istanbul-reporter": "2.1.1",
    "karma-electron": "6.3.0",
    "karma-jasmine": "3.1.1",
    "karma-jasmine-html-reporter": "1.5.2",
    "mocha": "7.0.1",
    "npm-run-all": "4.1.5",
    "raw-loader": "4.0.1",
    "rxjs": "6.5.4",
    "spectron": "10.0.1",
    "ts-node": "8.3.0",
    "tslib": "1.10.0",
    "typescript": "3.7.5",
    "wait-on": "4.0.0",
    "webdriver-manager": "12.1.7",
    "zone.js": "0.10.2"
  },
  "engines": {
    "node": ">=10.13.0"
  },
  "dependencies": {
    "@fortawesome/fontawesome-free": "5.13.0",
    "@materia-ui/ngx-monaco-editor": "4.0.1",
    "@types/d3": "5.7.2",
    "@types/ffi-napi": "2.4.1",
    "@types/ref-napi": "1.4.0",
    "amator": "1.1.0",
    "d3": "5.15.1",
    "electron-is-dev": "1.2.0",
    "electron-store": "5.1.1",
    "ffi-napi": "2.4.7",
    "googleapis": "39.2.0",
    "gridstack": "1.1.1",
    "monaco-editor": "0.20.0",
    "ngraph.events": "1.2.1",
    "npm-scripts-info": "0.3.9",
    "popmotion": "8.7.1",
    "ref-array-di": "1.2.1",
    "ref-napi": "1.4.3",
    "tar-fs": "2.0.1",
    "three": "0.116.1",
    "three-text2d": "0.6.0",
    "unzipper": "0.10.11"
  }
}
